# gemini.py

import logging
import google.generativeai as genai
import config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –≤—ã–≤–æ–¥–æ–º –≤ –∫–æ–Ω—Å–æ–ª—å
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(name)s: %(message)s"
)

logger = logging.getLogger("gemini")

genai.configure(api_key=config.GEMINI_API_KEY)


def revise_text_with_chatgpt(raw_text, comment="", source=""):
    prompt = (
        "–í–Ω–µ—Å–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫—É –≤ —Ç–µ–∫—Å—Ç –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è. CashTaxi –∑–∞–º–µ–Ω—è–π –Ω–∞ –¢–∞–∫—Å–æ–ø–∞—Ä–∫ –°–í–û–ò!. –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤—Å–µ–≥–¥–∞ –∑–∞–º–µ–Ω—è–π –Ω–∞ +7 929 515 80 66. –û—Å—Ç–∞–ª—å–Ω–æ–µ –æ—Å—Ç–∞–≤—å –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º.\n\n"
        f"–¢–µ–∫—Å—Ç: {raw_text}\n\n"
        f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {comment}\n\n"
        "–í—ã–¥–∞–π –∏—Ç–æ–≥–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç."
    )

    logger.info("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Gemini")
    logger.debug(f"üî∏ PROMPT:\n{prompt}")

    try:
        model = genai.GenerativeModel("gemini-1.5-flash")
        response = model.generate_content(prompt)
        logger.info("‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –æ—Ç Gemini")
        logger.debug(f"üîπ –û—Ç–≤–µ—Ç Gemini:\n{response.text.strip()}")
        return response.text.strip()
    except Exception as e:
        logger.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Gemini API")
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ –≤ –ª–æ–≥
        logger.error(f"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {str(e)}")
        return raw_text