import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from config import TELEGRAM_BOT_TOKEN, ADMIN_CHAT_IDS
from menu_router import menu_router
from moderation_router import moderation_router
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from dotenv import load_dotenv

load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    level=logging.DEBUG,
    format="%(asctime)s [%(levelname)s] %(name)s: %(message)s"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TELEGRAM_BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher(storage=MemoryStorage())  # ‚¨ÖÔ∏è –ë–µ–∑ —ç—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
dp.include_router(moderation_router)
dp.include_router(menu_router)

# –•—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
last_notification = {}  # admin_id: message_id


# –§–æ–Ω–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤
async def background_check_for_news():
    await asyncio.sleep(3)  # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º

    while True:
        from db import get_unnotified_posts, mark_posts_notified, get_current_post_for_admin

        post_ids = get_unnotified_posts()
        if post_ids:
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üöÄ –ù–∞—á–∞—Ç—å –º–æ–¥–µ—Ä–∞—Ü–∏—é", callback_data="start_moderation")]
            ])

            for admin_id in ADMIN_CHAT_IDS:
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –≤ —Å–µ—Å—Å–∏–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
                if get_current_post_for_admin(admin_id) is not None:
                    logging.info(f"–ê–¥–º–∏–Ω {admin_id} —É–∂–µ –≤ —Å–µ—Å—Å–∏–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
                    continue

                text = f"üì¨ –ü–æ–ª—É—á–µ–Ω–æ <b>{len(post_ids)}</b> –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤."
                try:
                    if admin_id in last_notification:
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        try:
                            await bot.edit_message_text(
                                chat_id=admin_id,
                                message_id=last_notification[admin_id],
                                text=text,
                                reply_markup=keyboard
                            )
                            logging.info(f"üîÅ –û–±–Ω–æ–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è {admin_id}")
                        except Exception:
                            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
                            sent = await bot.send_message(
                                chat_id=admin_id,
                                text=text,
                                reply_markup=keyboard
                            )
                            last_notification[admin_id] = sent.message_id
                            logging.info(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}")
                    else:
                        sent = await bot.send_message(
                            chat_id=admin_id,
                            text=text,
                            reply_markup=keyboard
                        )
                        last_notification[admin_id] = sent.message_id
                        logging.info(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–µ—Ä–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}")

                except Exception as e:
                    logging.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å/–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è {admin_id}: {e}")
                    try:
                        sent = await bot.send_message(
                            chat_id=admin_id,
                            text=text,
                            reply_markup=keyboard
                        )
                        last_notification[admin_id] = sent.message_id
                        logging.info(f"üì§ –ü–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}")
                    except Exception as inner_e:
                        logging.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–æ–±—â–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {inner_e}")

            mark_posts_notified(post_ids)

        await asyncio.sleep(30)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥


# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
async def main():
    asyncio.create_task(background_check_for_news())
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())